// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema PubSubTopic
 */
export class PubSubTopic extends ApiObject {
  /**
   * Returns the apiVersion and kind for "PubSubTopic"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'pubsub.cnrm.cloud.google.com/v1beta1',
    kind: 'PubSubTopic',
  }

  /**
   * Renders a Kubernetes manifest for "PubSubTopic".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: PubSubTopicProps = {}): any {
    return {
      ...PubSubTopic.GVK,
      ...toJson_PubSubTopicProps(props),
    };
  }

  /**
   * Defines a "PubSubTopic" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: PubSubTopicProps = {}) {
    super(scope, id, {
      ...PubSubTopic.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...PubSubTopic.GVK,
      ...toJson_PubSubTopicProps(resolved),
    };
  }
}

/**
 * @schema PubSubTopic
 */
export interface PubSubTopicProps {
  /**
   * @schema PubSubTopic#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema PubSubTopic#spec
   */
  readonly spec?: PubSubTopicSpec;

}

/**
 * Converts an object of type 'PubSubTopicProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_PubSubTopicProps(obj: PubSubTopicProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_PubSubTopicSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema PubSubTopicSpec
 */
export interface PubSubTopicSpec {
  /**
   * The KMSCryptoKey to be used to protect access to messages published
   * on this topic. Your project's Pub/Sub service account
   * ('service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com')
   * must have 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this
   * feature.
   *
   * @schema PubSubTopicSpec#kmsKeyRef
   */
  readonly kmsKeyRef?: PubSubTopicSpecKmsKeyRef;

  /**
   * Indicates the minimum duration to retain a message after it is published
   * to the topic. If this field is set, messages published to the topic in
   * the last messageRetentionDuration are always available to subscribers.
   * For instance, it allows any attached subscription to seek to a timestamp
   * that is up to messageRetentionDuration in the past. If this field is not
   * set, message retention is controlled by settings on individual subscriptions.
   * Cannot be more than 31 days or less than 10 minutes.
   *
   * @schema PubSubTopicSpec#messageRetentionDuration
   */
  readonly messageRetentionDuration?: string;

  /**
   * Policy constraining the set of Google Cloud Platform regions where
   * messages published to the topic may be stored. If not present, then no
   * constraints are in effect.
   *
   * @schema PubSubTopicSpec#messageStoragePolicy
   */
  readonly messageStoragePolicy?: PubSubTopicSpecMessageStoragePolicy;

  /**
   * Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
   *
   * @schema PubSubTopicSpec#resourceID
   */
  readonly resourceId?: string;

  /**
   * Settings for validating messages published against a schema.
   *
   * @schema PubSubTopicSpec#schemaSettings
   */
  readonly schemaSettings?: PubSubTopicSpecSchemaSettings;

}

/**
 * Converts an object of type 'PubSubTopicSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_PubSubTopicSpec(obj: PubSubTopicSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'kmsKeyRef': toJson_PubSubTopicSpecKmsKeyRef(obj.kmsKeyRef),
    'messageRetentionDuration': obj.messageRetentionDuration,
    'messageStoragePolicy': toJson_PubSubTopicSpecMessageStoragePolicy(obj.messageStoragePolicy),
    'resourceID': obj.resourceId,
    'schemaSettings': toJson_PubSubTopicSpecSchemaSettings(obj.schemaSettings),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The KMSCryptoKey to be used to protect access to messages published
 * on this topic. Your project's Pub/Sub service account
 * ('service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com')
 * must have 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this
 * feature.
 *
 * @schema PubSubTopicSpecKmsKeyRef
 */
export interface PubSubTopicSpecKmsKeyRef {
  /**
   * Allowed value: The `selfLink` field of a `KMSCryptoKey` resource.
   *
   * @schema PubSubTopicSpecKmsKeyRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema PubSubTopicSpecKmsKeyRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema PubSubTopicSpecKmsKeyRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'PubSubTopicSpecKmsKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_PubSubTopicSpecKmsKeyRef(obj: PubSubTopicSpecKmsKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Policy constraining the set of Google Cloud Platform regions where
 * messages published to the topic may be stored. If not present, then no
 * constraints are in effect.
 *
 * @schema PubSubTopicSpecMessageStoragePolicy
 */
export interface PubSubTopicSpecMessageStoragePolicy {
  /**
   * A list of IDs of GCP regions where messages that are published to
   * the topic may be persisted in storage. Messages published by
   * publishers running in non-allowed GCP regions (or running outside
   * of GCP altogether) will be routed for storage in one of the
   * allowed regions. An empty list means that no regions are allowed,
   * and is not a valid configuration.
   *
   * @schema PubSubTopicSpecMessageStoragePolicy#allowedPersistenceRegions
   */
  readonly allowedPersistenceRegions: string[];

}

/**
 * Converts an object of type 'PubSubTopicSpecMessageStoragePolicy' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_PubSubTopicSpecMessageStoragePolicy(obj: PubSubTopicSpecMessageStoragePolicy | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowedPersistenceRegions': obj.allowedPersistenceRegions?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Settings for validating messages published against a schema.
 *
 * @schema PubSubTopicSpecSchemaSettings
 */
export interface PubSubTopicSpecSchemaSettings {
  /**
   * The encoding of messages validated against schema. Default value: "ENCODING_UNSPECIFIED" Possible values: ["ENCODING_UNSPECIFIED", "JSON", "BINARY"].
   *
   * @schema PubSubTopicSpecSchemaSettings#encoding
   */
  readonly encoding?: string;

  /**
   * @schema PubSubTopicSpecSchemaSettings#schemaRef
   */
  readonly schemaRef: PubSubTopicSpecSchemaSettingsSchemaRef;

}

/**
 * Converts an object of type 'PubSubTopicSpecSchemaSettings' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_PubSubTopicSpecSchemaSettings(obj: PubSubTopicSpecSchemaSettings | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'encoding': obj.encoding,
    'schemaRef': toJson_PubSubTopicSpecSchemaSettingsSchemaRef(obj.schemaRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema PubSubTopicSpecSchemaSettingsSchemaRef
 */
export interface PubSubTopicSpecSchemaSettingsSchemaRef {
  /**
   * Allowed value: string of the format `projects/{{project}}/schemas/{{value}}`, where {{value}} is the `name` field of a `PubSubSchema` resource.
   *
   * @schema PubSubTopicSpecSchemaSettingsSchemaRef#external
   */
  readonly external?: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema PubSubTopicSpecSchemaSettingsSchemaRef#name
   */
  readonly name?: string;

  /**
   * Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
   *
   * @schema PubSubTopicSpecSchemaSettingsSchemaRef#namespace
   */
  readonly namespace?: string;

}

/**
 * Converts an object of type 'PubSubTopicSpecSchemaSettingsSchemaRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_PubSubTopicSpecSchemaSettingsSchemaRef(obj: PubSubTopicSpecSchemaSettingsSchemaRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'external': obj.external,
    'name': obj.name,
    'namespace': obj.namespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

